{"ast":null,"code":"import * as React from \"react\";\nexport var setRef = function setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n};\nexport var useForkRef = function useForkRef(refA, refB) {\n  return React.useMemo(function () {\n    return refA == null && refB == null ? null : function (refValue) {\n      setRef(refA, refValue);\n      setRef(refB, refValue);\n    };\n  }, [refA, refB]);\n};","map":{"version":3,"names":["React","setRef","ref","value","current","useForkRef","refA","refB","useMemo","refValue"],"sources":["/Users/kubilaybozak/Desktop/Tatto-Template/node_modules/yet-another-react-lightbox/dist/core/hooks/useForkRef.js"],"sourcesContent":["import * as React from \"react\";\nexport const setRef = (ref, value) => {\n    if (typeof ref === \"function\") {\n        ref(value);\n    }\n    else if (ref) {\n        ref.current = value;\n    }\n};\nexport const useForkRef = (refA, refB) => React.useMemo(() => refA == null && refB == null\n    ? null\n    : (refValue) => {\n        setRef(refA, refValue);\n        setRef(refB, refValue);\n    }, [refA, refB]);\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAMC,KAAN,EAAgB;EAClC,IAAI,OAAOD,GAAP,KAAe,UAAnB,EAA+B;IAC3BA,GAAG,CAACC,KAAD,CAAH;EACH,CAFD,MAGK,IAAID,GAAJ,EAAS;IACVA,GAAG,CAACE,OAAJ,GAAcD,KAAd;EACH;AACJ,CAPM;AAQP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAOC,IAAP;EAAA,OAAgBP,KAAK,CAACQ,OAAN,CAAc;IAAA,OAAMF,IAAI,IAAI,IAAR,IAAgBC,IAAI,IAAI,IAAxB,GACxD,IADwD,GAExD,UAACE,QAAD,EAAc;MACZR,MAAM,CAACK,IAAD,EAAOG,QAAP,CAAN;MACAR,MAAM,CAACM,IAAD,EAAOE,QAAP,CAAN;IACH,CALmD;EAAA,CAAd,EAKnC,CAACH,IAAD,EAAOC,IAAP,CALmC,CAAhB;AAAA,CAAnB"},"metadata":{},"sourceType":"module"}